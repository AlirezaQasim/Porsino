{"ast":null,"code":"var _jsxFileName = \"/Users/alirezaqasim/Desktop/Projects/React/firsttry/qaq/qaq/src/themecontext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// ایجاد Context برای تم\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\n\n// Provider برای فراهم کردن context تم و زبان به کامپوننت‌های فرزند\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // State برای نگهداری اطلاعات تم\n  const [theme, setTheme] = useState({\n    isDarkMode: localStorage.getItem('darkMode') === 'true' || false,\n    background: localStorage.getItem('darkMode') === 'true' ? '#121212' : '#f0f0f0',\n    text: localStorage.getItem('darkMode') === 'true' ? '#f0f0f0' : '#121212',\n    primary: '#007bff',\n    primaryHover: '#0056b3',\n    secondaryText: '#6c757d',\n    buttonBackground: localStorage.getItem('darkMode') === 'true' ? '#333' : '#fff',\n    buttonText: localStorage.getItem('darkMode') === 'true' ? '#fff' : '#333',\n    buttonHover: localStorage.getItem('darkMode') === 'true' ? '#555' : '#ddd',\n    buttonHoverText: localStorage.getItem('darkMode') === 'true' ? '#fff' : '#333',\n    cardBackground: localStorage.getItem('darkMode') === 'true' ? '#222' : '#fff',\n    heading: localStorage.getItem('darkMode') === 'true' ? '#fff' : '#333'\n  });\n\n  // استفاده از هوک useTranslation برای دسترسی به instance i18n\n  const {\n    i18n,\n    t\n  } = useTranslation();\n\n  // State برای نگهداری زبان فعلی برنامه\n  const [currentLanguage, setCurrentLanguage] = useState(() => {\n    return localStorage.getItem('appLanguage') || i18n.language || 'en';\n  });\n\n  // Effect برای ذخیره تغییرات تم در localStorage و به‌روزرسانی state تم\n  useEffect(() => {\n    localStorage.setItem('darkMode', theme.isDarkMode);\n    setTheme(prevTheme => ({\n      ...prevTheme,\n      background: prevTheme.isDarkMode ? '#121212' : '#f0f0f0',\n      text: prevTheme.isDarkMode ? '#f0f0f0' : '#121212',\n      buttonBackground: prevTheme.isDarkMode ? '#333' : '#fff',\n      buttonText: prevTheme.isDarkMode ? '#fff' : '#333',\n      buttonHover: prevTheme.isDarkMode ? '#555' : '#ddd',\n      buttonHoverText: prevTheme.isDarkMode ? '#fff' : '#333',\n      cardBackground: prevTheme.isDarkMode ? '#222' : '#fff',\n      heading: prevTheme.isDarkMode ? '#fff' : '#333'\n    }));\n  }, [theme.isDarkMode]);\n\n  // Effect برای ذخیره تغییرات زبان در localStorage و تغییر زبان i18n\n  useEffect(() => {\n    localStorage.setItem('appLanguage', currentLanguage);\n    i18n.changeLanguage(currentLanguage);\n  }, [currentLanguage, i18n]);\n\n  // تابع برای تغییر حالت تم\n  const toggleTheme = () => {\n    setTheme(prevTheme => ({\n      ...prevTheme,\n      isDarkMode: !prevTheme.isDarkMode\n    }));\n  };\n\n  // تابع برای تغییر زبان برنامه\n  const setLanguage = lng => {\n    setCurrentLanguage(lng);\n  };\n\n  // فراهم کردن مقادیر تم، تابع تغییر تم، زبان فعلی و تابع تغییر زبان برای کامپوننت‌های فرزند\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme,\n      currentLanguage,\n      setLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n// هوک سفارشی برای استفاده آسان از context تم در کامپوننت‌های فرزند\n_s(ThemeProvider, \"WNGK0FbXZWZ8/CtWt+GgOcAWQMc=\", false, function () {\n  return [useTranslation];\n});\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useTranslation","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","isDarkMode","localStorage","getItem","background","text","primary","primaryHover","secondaryText","buttonBackground","buttonText","buttonHover","buttonHoverText","cardBackground","heading","i18n","t","currentLanguage","setCurrentLanguage","language","setItem","prevTheme","changeLanguage","toggleTheme","setLanguage","lng","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["/Users/alirezaqasim/Desktop/Projects/React/firsttry/qaq/qaq/src/themecontext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// ایجاد Context برای تم\nconst ThemeContext = createContext();\n\n// Provider برای فراهم کردن context تم و زبان به کامپوننت‌های فرزند\nexport const ThemeProvider = ({ children }) => {\n    // State برای نگهداری اطلاعات تم\n    const [theme, setTheme] = useState({\n        isDarkMode: localStorage.getItem('darkMode') === 'true' || false,\n        background: localStorage.getItem('darkMode') === 'true' ? '#121212' : '#f0f0f0',\n        text: localStorage.getItem('darkMode') === 'true' ? '#f0f0f0' : '#121212',\n        primary: '#007bff',\n        primaryHover: '#0056b3',\n        secondaryText: '#6c757d',\n        buttonBackground: localStorage.getItem('darkMode') === 'true' ? '#333' : '#fff',\n        buttonText: localStorage.getItem('darkMode') === 'true' ? '#fff' : '#333',\n        buttonHover: localStorage.getItem('darkMode') === 'true' ? '#555' : '#ddd',\n        buttonHoverText: localStorage.getItem('darkMode') === 'true' ? '#fff' : '#333',\n        cardBackground: localStorage.getItem('darkMode') === 'true' ? '#222' : '#fff',\n        heading: localStorage.getItem('darkMode') === 'true' ? '#fff' : '#333',\n    });\n\n    // استفاده از هوک useTranslation برای دسترسی به instance i18n\n    const { i18n,t } = useTranslation();\n\n    // State برای نگهداری زبان فعلی برنامه\n    const [currentLanguage, setCurrentLanguage] = useState(() => {\n        return localStorage.getItem('appLanguage') || i18n.language || 'en';\n    });\n\n    // Effect برای ذخیره تغییرات تم در localStorage و به‌روزرسانی state تم\n    useEffect(() => {\n        localStorage.setItem('darkMode', theme.isDarkMode);\n        setTheme((prevTheme) => ({\n            ...prevTheme,\n            background: prevTheme.isDarkMode ? '#121212' : '#f0f0f0',\n            text: prevTheme.isDarkMode ? '#f0f0f0' : '#121212',\n            buttonBackground: prevTheme.isDarkMode ? '#333' : '#fff',\n            buttonText: prevTheme.isDarkMode ? '#fff' : '#333',\n            buttonHover: prevTheme.isDarkMode ? '#555' : '#ddd',\n            buttonHoverText: prevTheme.isDarkMode ? '#fff' : '#333',\n            cardBackground: prevTheme.isDarkMode ? '#222' : '#fff',\n            heading: prevTheme.isDarkMode ? '#fff' : '#333',\n            \n        }));\n    }, [theme.isDarkMode]);\n\n    // Effect برای ذخیره تغییرات زبان در localStorage و تغییر زبان i18n\n    useEffect(() => {\n        localStorage.setItem('appLanguage', currentLanguage);\n        i18n.changeLanguage(currentLanguage);\n    }, [currentLanguage, i18n]);\n\n    // تابع برای تغییر حالت تم\n    const toggleTheme = () => {\n        setTheme((prevTheme) => ({ ...prevTheme, isDarkMode: !prevTheme.isDarkMode }));\n    };\n\n    // تابع برای تغییر زبان برنامه\n    const setLanguage = (lng) => {\n        setCurrentLanguage(lng);\n    };\n\n    // فراهم کردن مقادیر تم، تابع تغییر تم، زبان فعلی و تابع تغییر زبان برای کامپوننت‌های فرزند\n    return (\n        <ThemeContext.Provider value={{ theme, toggleTheme, currentLanguage, setLanguage }}>\n            {children}\n        </ThemeContext.Provider>\n    );\n};\n\n// هوک سفارشی برای استفاده آسان از context تم در کامپوننت‌های فرزند\nexport const useTheme = () => useContext(ThemeContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}