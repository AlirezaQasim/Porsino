{"ast":null,"code":"import React,{createContext,useState,useEffect,useContext}from'react';import{useTranslation}from'react-i18next';// ایجاد Context برای تم\nimport{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();// Provider برای فراهم کردن context تم و زبان به کامپوننت‌های فرزند\nexport const ThemeProvider=_ref=>{let{children}=_ref;// State برای نگهداری اطلاعات تم\nconst[theme,setTheme]=useState({isDarkMode:localStorage.getItem('darkMode')==='true'||false,background:localStorage.getItem('darkMode')==='true'?'#121212':'#f0f0f0',text:localStorage.getItem('darkMode')==='true'?'#f0f0f0':'#121212',primary:'#007bff',primaryHover:'#0056b3',secondaryText:'#6c757d',buttonBackground:localStorage.getItem('darkMode')==='true'?'#333':'#fff',buttonText:localStorage.getItem('darkMode')==='true'?'#fff':'#333',buttonHover:localStorage.getItem('darkMode')==='true'?'#555':'#ddd',buttonHoverText:localStorage.getItem('darkMode')==='true'?'#fff':'#333',cardBackground:localStorage.getItem('darkMode')==='true'?'#222':'#fff',heading:localStorage.getItem('darkMode')==='true'?'#fff':'#333'});// استفاده از هوک useTranslation برای دسترسی به instance i18n\nconst{i18n}=useTranslation();// State برای نگهداری زبان فعلی برنامه\nconst[currentLanguage,setCurrentLanguage]=useState(()=>{return localStorage.getItem('appLanguage')||i18n.language||'en';});// Effect برای ذخیره تغییرات تم در localStorage و به‌روزرسانی state تم\nuseEffect(()=>{localStorage.setItem('darkMode',theme.isDarkMode);setTheme(prevTheme=>({...prevTheme,background:prevTheme.isDarkMode?'#121212':'#f0f0f0',text:prevTheme.isDarkMode?'#f0f0f0':'#121212',buttonBackground:prevTheme.isDarkMode?'#333':'#fff',buttonText:prevTheme.isDarkMode?'#fff':'#333',buttonHover:prevTheme.isDarkMode?'#555':'#ddd',buttonHoverText:prevTheme.isDarkMode?'#fff':'#333',cardBackground:prevTheme.isDarkMode?'#222':'#fff',heading:prevTheme.isDarkMode?'#fff':'#333'}));},[theme.isDarkMode]);// Effect برای ذخیره تغییرات زبان در localStorage و تغییر زبان i18n\nuseEffect(()=>{localStorage.setItem('appLanguage',currentLanguage);i18n.changeLanguage(currentLanguage);},[currentLanguage,i18n]);// تابع برای تغییر حالت تم\nconst toggleTheme=()=>{setTheme(prevTheme=>({...prevTheme,isDarkMode:!prevTheme.isDarkMode}));};// تابع برای تغییر زبان برنامه\nconst setLanguage=lng=>{setCurrentLanguage(lng);};// فراهم کردن مقادیر تم، تابع تغییر تم، زبان فعلی و تابع تغییر زبان برای کامپوننت‌های فرزند\nreturn/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{theme,toggleTheme,currentLanguage,setLanguage},children:children});};// هوک سفارشی برای استفاده آسان از context تم در کامپوننت‌های فرزند\nexport const useTheme=()=>useContext(ThemeContext);","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useTranslation","jsx","_jsx","ThemeContext","ThemeProvider","_ref","children","theme","setTheme","isDarkMode","localStorage","getItem","background","text","primary","primaryHover","secondaryText","buttonBackground","buttonText","buttonHover","buttonHoverText","cardBackground","heading","i18n","currentLanguage","setCurrentLanguage","language","setItem","prevTheme","changeLanguage","toggleTheme","setLanguage","lng","Provider","value","useTheme"],"sources":["/Users/alirezaqasim/Desktop/Projects/React/firsttry/qaq/src/contexts/themecontext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// ایجاد Context برای تم\nconst ThemeContext = createContext();\n\n// Provider برای فراهم کردن context تم و زبان به کامپوننت‌های فرزند\nexport const ThemeProvider = ({ children }) => {\n    // State برای نگهداری اطلاعات تم\n    const [theme, setTheme] = useState({\n        isDarkMode: localStorage.getItem('darkMode') === 'true' || false,\n        background: localStorage.getItem('darkMode') === 'true' ? '#121212' : '#f0f0f0',\n        text: localStorage.getItem('darkMode') === 'true' ? '#f0f0f0' : '#121212',\n        primary: '#007bff',\n        primaryHover: '#0056b3',\n        secondaryText: '#6c757d',\n        buttonBackground: localStorage.getItem('darkMode') === 'true' ? '#333' : '#fff',\n        buttonText: localStorage.getItem('darkMode') === 'true' ? '#fff' : '#333',\n        buttonHover: localStorage.getItem('darkMode') === 'true' ? '#555' : '#ddd',\n        buttonHoverText: localStorage.getItem('darkMode') === 'true' ? '#fff' : '#333',\n        cardBackground: localStorage.getItem('darkMode') === 'true' ? '#222' : '#fff',\n        heading: localStorage.getItem('darkMode') === 'true' ? '#fff' : '#333',\n    });\n\n    // استفاده از هوک useTranslation برای دسترسی به instance i18n\n    const { i18n } = useTranslation();\n\n    // State برای نگهداری زبان فعلی برنامه\n    const [currentLanguage, setCurrentLanguage] = useState(() => {\n        return localStorage.getItem('appLanguage') || i18n.language || 'en';\n    });\n\n    // Effect برای ذخیره تغییرات تم در localStorage و به‌روزرسانی state تم\n    useEffect(() => {\n        localStorage.setItem('darkMode', theme.isDarkMode);\n        setTheme((prevTheme) => ({\n            ...prevTheme,\n            background: prevTheme.isDarkMode ? '#121212' : '#f0f0f0',\n            text: prevTheme.isDarkMode ? '#f0f0f0' : '#121212',\n            buttonBackground: prevTheme.isDarkMode ? '#333' : '#fff',\n            buttonText: prevTheme.isDarkMode ? '#fff' : '#333',\n            buttonHover: prevTheme.isDarkMode ? '#555' : '#ddd',\n            buttonHoverText: prevTheme.isDarkMode ? '#fff' : '#333',\n            cardBackground: prevTheme.isDarkMode ? '#222' : '#fff',\n            heading: prevTheme.isDarkMode ? '#fff' : '#333',\n            \n        }));\n    }, [theme.isDarkMode]);\n\n    // Effect برای ذخیره تغییرات زبان در localStorage و تغییر زبان i18n\n    useEffect(() => {\n        localStorage.setItem('appLanguage', currentLanguage);\n        i18n.changeLanguage(currentLanguage);\n    }, [currentLanguage, i18n]);\n\n    // تابع برای تغییر حالت تم\n    const toggleTheme = () => {\n        setTheme((prevTheme) => ({ ...prevTheme, isDarkMode: !prevTheme.isDarkMode }));\n    };\n\n    // تابع برای تغییر زبان برنامه\n    const setLanguage = (lng) => {\n        setCurrentLanguage(lng);\n    };\n\n    // فراهم کردن مقادیر تم، تابع تغییر تم، زبان فعلی و تابع تغییر زبان برای کامپوننت‌های فرزند\n    return (\n        <ThemeContext.Provider value={{ theme, toggleTheme, currentLanguage, setLanguage }}>\n            {children}\n        </ThemeContext.Provider>\n    );\n};\n\n// هوک سفارشی برای استفاده آسان از context تم در کامپوننت‌های فرزند\nexport const useTheme = () => useContext(ThemeContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}